<Grid x:Class="EverythingToolbar.SettingsControl"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:properties="clr-namespace:EverythingToolbar.Properties"
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:h="clr-namespace:EverythingToolbar.Helpers"
      xmlns:local="clr-namespace:EverythingToolbar"
      Background="Transparent"
      Margin="10, 0"
      MouseLeftButtonUp="OnMouseLeftButtonUp">

    <Grid.ContextMenu>
        <ContextMenu Focusable="False">
            <ContextMenu.Resources>

                <Style TargetType="{x:Type MenuItem}">
                    <Setter Property="Background" Value="{DynamicResource SearchResultsViewBackground}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource TabBarBorder}" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Foreground" Value="{DynamicResource SearchResultFileName}" />
                    <Setter Property="FontSize" Value="13" />
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                <Border x:Name="Border" Background="{TemplateBinding Background}" Padding="5, 5, 5, 5">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="Col0" MinWidth="28" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                            <ColumnDefinition x:Name="Col3" Width="20" />
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter Grid.Column="0"
                                                          Margin="8, 0, 6, 0"
                                                          x:Name="Icon"
                                                          VerticalAlignment="Center"
                                                          TextBlock.FontFamily="Segoe MDL2 Assets"
                                                          ContentSource="Icon" />
                                        <Grid Grid.Column="0"
                                              Visibility="Hidden"
                                              Margin="7, 0, 6, 0"
                                              x:Name="GlyphPanel"
                                              VerticalAlignment="Center">
                                            <Path x:Name="GlyphPanelpath"
                                                  VerticalAlignment="Center"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="0.8"
                                                  Data="M0,6 L4,10 L12,0"
                                                  FlowDirection="LeftToRight" />
                                        </Grid>
                                        <ContentPresenter Grid.Column="1"
                                                          Margin="7, 0, 0, 0"
                                                          x:Name="HeaderHost"
                                                          RecognizesAccessKey="True"
                                                          ContentSource="Header"
                                                          VerticalAlignment="Center" />
                                        <ContentPresenter Grid.Column="2"
                                                          Margin="8, 1, 8, 1" 
                                                          x:Name="IGTHost" 
                                                          ContentSource="InputGestureText" 
                                                          VerticalAlignment="Center" />
                                        <Grid Grid.Column="3" 
                                              Margin="4, 0, 0, 0" 
                                              x:Name="ArrowPanel" 
                                              VerticalAlignment="Center">
                                            <Path x:Name="ArrowPanelPath" 
                                                  HorizontalAlignment="Left" 
                                                  VerticalAlignment="Center" 
                                                  Stroke="{TemplateBinding Foreground}" 
                                                  StrokeThickness="0.8" 
                                                  Data="M0,0 L6,6 L0,12" />
                                        </Grid>
                                        <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                               Placement="Right" 
                                               x:Name="SubMenuPopup" 
                                               Focusable="False">
                                            <Border x:Name="SubMenuBorder" 
                                                    Background="{DynamicResource SearchResultsViewBackground}" 
                                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                                    Padding="0, 4">
                                                <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                                    <StackPanel IsItemsHost="True" 
                                                                KeyboardNavigation.DirectionalNavigation="Cycle" 
                                                                Style="{x:Null}" Grid.IsSharedSizeScope="True" />
                                                </Grid>
                                            </Border>
                                        </Popup>
                                    </Grid>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.6" />
                                    </Trigger>
                                    <Trigger Property="Role" Value="TopLevelHeader">
                                        <Setter Property="Padding" Value="6,1,6,1" />
                                        <Setter Property="MinWidth" Value="0" TargetName="Col0" />
                                        <Setter Property="Width" Value="Auto" TargetName="Col3" />
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel" />
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost" />
                                        <Setter Property="Visibility" Value="Visible" TargetName="ArrowPanel" />
                                    </Trigger>
                                    <Trigger Property="Role" Value="TopLevelItem">
                                        <Setter Property="Padding" Value="6,1,6,1" />
                                        <Setter Property="Width" Value="110" />
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                                    </Trigger>
                                    <Trigger Property="Role" Value="SubmenuHeader">
                                        <Setter Property="DockPanel.Dock" Value="Top" />
                                        <Setter Property="Padding" Value="0,2,0,2" />
                                    </Trigger>
                                    <Trigger Property="Role" Value="SubmenuItem">
                                        <Setter Property="DockPanel.Dock" Value="Top" />
                                        <Setter Property="Padding" Value="0,2,0,2" />
                                        <Setter Property="Background" Value="Transparent" />
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                                    </Trigger>
                                    <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                        <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup" />
                                    </Trigger>
                                    <Trigger Property="IsSuspendingPopupAnimation" Value="False">
                                        <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup" />
                                    </Trigger>
                                    <Trigger Property="Icon" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel" />
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                                    </Trigger>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource SearchResultFileName}" />
                                        <Setter Property="Background" Value="{DynamicResource SearchResultBackgroundHover}" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup" />
                                        <Setter Property="Background" Value="{DynamicResource SearchResultBackgroundHover}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                    <Setter Property="Background" Value="{DynamicResource SearchResultBackgroundActive}" />
                    <Setter Property="Margin" Value="11, 7" />
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Separator}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        Height="1"
                                        SnapsToDevicePixels="True" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style TargetType="{x:Type ContextMenu}">
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <Setter Property="OverridesDefaultStyle" Value="True" />
                    <Setter Property="Grid.IsSharedSizeScope" Value="True" />
                    <Setter Property="HasDropShadow" Value="True" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ContextMenu}">
                                <Border x:Name="Border" Background="{DynamicResource SearchResultsViewBackground}"
                                        BorderBrush="{DynamicResource TabBarBorder}"
                                        BorderThickness="1"
                                        Padding="0, 4">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

            </ContextMenu.Resources>

            <i:Interaction.Behaviors>
                <h:DpiScaling x:Name="dpiScaling" />
            </i:Interaction.Behaviors>

            <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SettingsRegularExpressions}" Click="OnMenuItemClicked"
                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isRegExEnabled, Mode=TwoWay}"
                      IsEnabled="{Binding Source={x:Static local:EverythingSearch.Instance}, Path=CurrentFilter.IsRegExEnabled, Mode=OneWay}" />
            <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SettingsMatchCase}" Click="OnMenuItemClicked"
                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isMatchCase, Mode=TwoWay}"
                      IsEnabled="{Binding Source={x:Static local:EverythingSearch.Instance}, Path=CurrentFilter.IsMatchCase, Mode=OneWay}" />
            <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SettingsMatchPath}" Click="OnMenuItemClicked"
                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isMatchPath, Mode=TwoWay}"
                      IsEnabled="{Binding Source={x:Static local:EverythingSearch.Instance}, Path=CurrentFilter.IsMatchPath, Mode=OneWay}" />
            <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SettingsMatchWholeWord}" Click="OnMenuItemClicked"
                      IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isMatchWholeWord, Mode=TwoWay}">
                <MenuItem.Style>
                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                        <Setter Property="Focusable" Value="False" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Source={x:Static local:EverythingSearch.Instance}, Path=CurrentFilter.IsMatchWholeWord, Mode=OneWay}"
                                         Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static local:EverythingSearch.Instance}, Path=CurrentFilter.IsMatchWholeWord, Mode=OneWay}"
                                         Value="False">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=isRegExEnabled, Mode=OneWay}" Value="True">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
            <Separator />
            <MenuItem Header="{x:Static properties:Resources.SettingsSortBy}" Name="SortByMenu" Icon="&#xE8CB;">
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByNameAscending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByNameDescending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByPathAscending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByPathDescending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortBySizeAscending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortBySizeDescending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByExtensionAscending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByExtensionDescending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByTypeNameAscending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByTypeNameDescending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByDateCreatedAscending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByDateCreatedDescending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByDateModifiedAscending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByDateModifiedDescending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByAttributesAscending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByAttributesDescending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByFileListFilenameAscending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByFileListFilenameDescending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByRunCountAscending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByRunCountDescending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByDateRecentlyChangedAscending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByDateRecentlyChangedDescending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByDateAccessedAscending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByDateAccessedDescending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByDateRunAscending}" Click="OnSortByClicked" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SortByDateRunDescending}" Click="OnSortByClicked" />
            </MenuItem>
            <Separator />
            <MenuItem Header="{x:Static properties:Resources.SettingsPreferences}" Icon="&#xF8B0;">
                <MenuItem Header="{x:Static properties:Resources.SettingsRules}" Click="OpenRulesWindow" Icon="&#xE7AC;" />
                <MenuItem Header="{x:Static properties:Resources.SettingsChangeShortcut}" Click="OpenShortcutWindow" Icon="&#xE765;" />
                <Separator />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SettingsUseEverythingFilters}" Click="OnMenuItemClicked"
                          IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isImportFilters, Mode=TwoWay}" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SettingsHideEmptyResults}" Click="OnMenuItemClicked"
                          IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isHideEmptySearchResults, Mode=TwoWay}" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SettingsShowResultsCount}" Click="OnMenuItemClicked"
                          IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isShowResultsCount, Mode=TwoWay}" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SettingsShowQuickToggles}" Click="OnMenuItemClicked"
                          IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isShowQuickToggles, Mode=TwoWay}" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SettingsEnableHistory}" Click="OnMenuItemClicked"
                          IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isEnableHistory, Mode=TwoWay}" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SettingsReplaceStartMenuSearch}" Click="OnMenuItemClicked"
                          IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isReplaceStartMenuSearch, Mode=TwoWay}" />
                <MenuItem IsCheckable="True" Header="{x:Static properties:Resources.SettingsDisableAnimations}" Click="OnMenuItemClicked"
                          IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=isAnimationsDisabled, Mode=TwoWay}" />
                <Separator />
                <MenuItem Header="{x:Static properties:Resources.SettingsView}" Name="ItemTemplateMenu" Click="OnItemTemplateClicked" Icon="&#xE8BC;" />
                <MenuItem Header="{x:Static properties:Resources.SettingsTheme}" Name="ThemeMenu" Click="OnThemeClicked" Icon="&#xF08C;" />
            </MenuItem>
            <MenuItem Header="{x:Static properties:Resources.SettingsAbout}" Click="OpenAboutWindow" Icon="&#xE946;" />
        </ContextMenu>
    </Grid.ContextMenu>

    <Border Background="Transparent">
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property= "TextBlock.Foreground" Value="{DynamicResource TabForeground}" />
                <Style.Triggers>
                    <Trigger Property ="IsMouseOver" Value="True">
                        <Setter Property= "TextBlock.Foreground" Value="{DynamicResource TabForegroundHover}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <TextBlock x:Name="ThreeDotTextBlock"
               Text="⋯"
               HorizontalAlignment="Center"
               VerticalAlignment="Center"
               FontSize="14pt"
               Padding="7, 0, 7, 6">
        </TextBlock>
    </Border>
    
</Grid>
